CG.table <- matrix(0L,nrow=length(coords),ncol=length(files))
dir.path=paste0(wd,"PhD_BPS33/data/CG/")
pos.chr=1
pos.bp.start=2
pos.bp.end=2
pos.met=3
wd <- "/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/Experiments/"
files <- list.files(path = dir.path)
dir.path=paste0(wd,"PhD_BPS33/data/CG/")
dir.path=paste0(wd,"PhD_BPS33/data/CG/")
files <- list.files(path = dir.path)
files.dir <-  paste0(dir.path,files)
coords<-c()
cat("Reading coordinates in each file...\n\n")
for (i in 1:length(files.dir)){
dat <- read.table(files.dir[i],header=TRUE)
coord_dat<-paste0(dat[,pos.chr],"_",dat[,pos.bp.start],"_",dat[,pos.bp.end])
coords <- c(coords,coord_dat)
}
cat("\n\nObtaining unique coordinates...\n\n")
coords<-sort(unique(coords))
CG.table <- matrix(0L,nrow=length(coords),ncol=length(files))
CG.table[which(CG.table==0)] <- (-1)
rownames(CG.table)<-coords
colnames(CG.table)<-files
cat("\n\nObtaining methylation calls in each coordinate...\n\n")
head(CG.table)
cat("\n\nObtaining methylation calls in each coordinate...\n\n")
for (i in 1:length(files.dir)){
dat <- read.table(files.dir[i],header=TRUE)
coord_dat<-paste0(dat[,pos.chr],"_",dat[,pos.bp.start],"_",dat[,pos.bp.end])
rownames(dat) <-coord_dat
CG.table[coord_dat,i]<-dat[coord_dat,pos.met]
}
cat("\n\nDONE!...\n\n")
CG.table[1:5,1:4]
CG.table[CG.table == (-1)] <- NA
apply(CG.table,2,function(x){length(which(is.na(x)==FALSE))})
hist(apply(CG.table,1,function(x){length(which(is.na(x)==FALSE))}),main="Distribution of number of cells with information of a particular region")
?GRanges
??GRanges
library(xlsx)
cellSurfaceGenes_mouse <- read.xlsx("/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/My_R_package/code_resources/surfaceomeproteins_wlabethz_File.xlsx",sheetName = "Table B")
cellSurfaceGenes_human <- read.xlsx("/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/My_R_package/code_resources/surfaceomeproteins_wlabethz_File.xlsx",sheetName = "Table A")
setwd("/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/My_R_package/code_resources/")
geneTable <- read.csv("mart_export.txt")
#save(geneTable, file="/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/My_R_package/bioSeq/data/geneTable.rda")
load("/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/Experiments/bin_data/gtf.RDa")
mm10_gtf<-gtf
#save(mm10_gtf,file="/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/Experiments/bin_data/mm10_gtf.RDa")
setwd("/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/My_R_package/bioSeq/R/")
library(devtools)
devtools::use_data(cellSurfaceGenes_mouse, cellSurfaceGenes_human,mm10_gtf,geneTable, internal = TRUE)
??seqnames
??subsetByOverlaps
wd <- "/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/Experiments/"
library(bioSeq)
CG.table<-makeTableFromMethylData(dir.path=paste0(wd,"PhD_BPS33/data/CG/"),pos.chr=1,pos.bp.start=2,pos.bp.end=2,pos.met=3)
plotMethylinRegions(CG.table,region="gene",coord_start="start",coord_end="start",bedFile=NULL,
bp_upstream=500,bp_downstream=500,window=NULL,stepsize=NULL,
output_dir=paste0(wd,"PhD_BPS33/plots/CG_Percentage_"),output_type="pdf", width_output_distr=30,
height_output_distr=20,keepTempFiles=FALSE, emptyEntries=(-1))
data=CG.table
region="gene"
coord_start="start"
coord_end="start"
bedFile=NULL
bp_upstream=500
bp_downstream=500
window=NULL
stepsize=NULL
output_dir=paste0(wd,"PhD_BPS33/plots/CG_Percentage_")
output_type="pdf"
width_output_distr=30
height_output_distr=20
keepTempFiles=FALSE
emptyEntries=(-1)
currentDir <- getwd()
cat(paste("\n\nTaking",region,"coordinates from gtf...\n\n"))
if ((region %in% unique(mm10_gtf$feature))==FALSE){
if (region == "no"){
if (is.null(bedFile)){
stop(paste("region",region,"not found and no bedFile path provided."))
} else {
#IF BEDFILE PROVIDED
gtf_specific <- as.data.frame(bedFile)
colnames(gtf_specific) <- c("seqname","start","end")
}
} else {
stop(paste("region",region,"not found. Please specify one of the following:",unique(mm10_gtf$feature)))
}
} else if ((region %in% unique(mm10_gtf$feature))==TRUE){
gtf_specific <- mm10_gtf[grep(region,mm10_gtf$feature,ignore.case=TRUE),]
}
cat(paste("\n\nObtaining start and end coordinates...\n\n"))
if (coord_start == "start"){
start_reg <- gtf_specific$start
} else if (coord_start == "end"){
start_reg <- gtf_specific$end
} else {
stop(paste("coord_start",coord_start,"is not valid. Please specify either 'start' or 'end'"))
}
if (coord_end == "start"){
end_reg <- gtf_specific$start
} else if (coord_end == "end"){
end_reg <- gtf_specific$end
} else {
stop(paste("coord_end",coord_end,"is not valid. Please specify either 'start' or 'end'"))
}
chr <- gtf_specific$seqname
start_reg_up <- start_reg-bp_upstream
end_reg_down <- start_reg+bp_downstream
data_methyl_chr <- as.factor(gsub("_.*","",rownames(data)))
data_methyl_start <- gsub("_.*","",sub("^[a-zA-Z0-9]+_","",rownames(data)))
data_methyl_end <-as.integer(gsub(".*_","",(sub("^[a-zA-Z0-9]+_","",rownames(data)))))
data.NA <- data
data.NA[data.NA == emptyEntries] <- NA
hist(apply(data.NA,1,function(x){length(which(is.na(x)==FALSE))}),main="Distribution of number of cells with\ninformation of a particular region",xlab="num.cells/region")
??edgeR::estimateCommonDisp
??hyperGTest
?hyperGTest
??hyperGTest
topGo::hyperGTest
topGo::hyperGTest()
topGO::hyperGTest()
??topGO::hyperGTest()
??topGO::hyperGTest
